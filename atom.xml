<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小道博客</title>
  <subtitle>Android和前端知识的技术积累</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oyjt.github.io/"/>
  <updated>2016-10-07T12:11:05.155Z</updated>
  <id>http://oyjt.github.io/</id>
  
  <author>
    <name>江阳小道</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Android Studio下使用Hierarchy Viewer</title>
    <link href="http://oyjt.github.io/2016/04/18/%E5%9C%A8Android%20Studio%E4%B8%8B%E4%BD%BF%E7%94%A8Hierarchy%20Viewer/"/>
    <id>http://oyjt.github.io/2016/04/18/在Android Studio下使用Hierarchy Viewer/</id>
    <published>2016-04-18T02:19:24.000Z</published>
    <updated>2016-10-07T12:11:05.155Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近看到这篇文章<a href="http://mrpeak.cn/android/2016/01/11/android-performance-ui" target="_blank" rel="external">《Android UI性能优化详解》</a>，里面使用了Hierarchy Viewer来对布局进行优化。开发android这么久了，一直都有听过这个工具，但是重来都没真正去使用过，不得不说是一种失败。现在刚好趁着空闲，研究一下Hierarchy Viewer的使用方法。</p>
<h3 id="启动Android-Device-Monitor"><a href="#启动Android-Device-Monitor" class="headerlink" title="启动Android Device Monitor"></a>启动Android Device Monitor</h3><p>网上搜索了教程，直接在<code>sdk&gt;tools</code>下面找到<code>hierarchyviewer.bat</code>双击运行，然后运行成功了。<br>但是出现这个提示：</p>
<blockquote>
<p>The standalone version of hieararchyviewer is deprecated.<br>Please use Android Device Monitor (tools/monitor.bat) instead.</p>
</blockquote>
<p>大概意思是说，单独版本的 <strong>hieararchyviewer</strong> 已经被弃用了。请使用 <strong>Android Device Monitor</strong>来代替。<strong>Android Device Monitor</strong>在<code>tools</code>目录下面找到<code>monitor.bat</code>即可。</p>
<p>为了紧跟时代潮流，就决定用<strong>Android Device Monitor</strong>了！</p>
<p>但是每次都从<code>tools</code>目录下面去启动<strong>Android Device Monitor</strong>，也太麻烦了吧。万能的Android Studio下面就不能直接启动吗？</p>
<p>答案是：当然可以！有两种启动方式。</p>
<ol>
<li><p><strong>第一种</strong><br> 依次点击菜单<code>Tools&gt;Android&gt;Android Device Monitor</code>，如下图：<br><img src="http://upload-images.jianshu.io/upload_images/1897639-9c9f672b014fbb82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动Android Device Monitor"></p>
</li>
<li><p><strong>第二种</strong><br> 直接点击菜单下面，问号旁边的图标，如下图：</p>
</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/1897639-fb0c5a8e78a172c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动Android Device Monitor"></p>
<h3 id="打开Hierarchy-Viewe"><a href="#打开Hierarchy-Viewe" class="headerlink" title="打开Hierarchy Viewe"></a>打开Hierarchy Viewe</h3><p>启动<strong>Android Device Monitor</strong>成功之后，在新的的窗口中点击切换视图图标，选择<strong>Hierarchy Viewe</strong>，如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897639-c0631c3809290179.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开Hierarchy Viewe"></p>
<h3 id="使用Hierarchy-Viewer"><a href="#使用Hierarchy-Viewer" class="headerlink" title="使用Hierarchy Viewer"></a>使用Hierarchy Viewer</h3><p>由于一直都是用真机开发，启动之后，发现没有看到应有的效果，出现了下面的错误：</p>
<blockquote>
<p>[2016-04-15 15:44:26 - hierarchyviewer]Unable to get view server version from device 2d2843d<br>[2016-04-15 15:44:26 - hierarchyviewer]Unable to get view server protocol version from device 2d2843d</p>
</blockquote>
<p>发现是因为真机不能获取到<code>view server</code>的原因。<br>该问题的详细原因：<a href="http://blog.csdn.net/yafeng_0306/article/details/17224001" target="_blank" rel="external">为什么HierachyViewer无法连接真机调试</a></p>
<p>目前手上没有能开启<code>view server</code>，所以只能使用模拟器了。<br>之前的<code>Genymotion</code>模拟器被我删掉了，就只能用自带的模拟器了╮（╯＿╰）╭ 但是手头上的项目只支持arm架构的模拟器运行，不能用<code>Intel HAXM</code>去加速了，所以说了这么多废话的目的是为了说明：自带的模拟器真的太慢了！<br>然后进入漫长的等待……<br>……<br>……<br>……<br>一小时过去了！然后到下班时间了！-_-||<br>抱歉看不到运行结果了！<br>看不到结果表示遗憾，开启步骤已经说完了，具体的使用情况这里不再说明。网上很多，这里贴出一个（开头已经提过）：<br>《Android UI性能优化详解》](<a href="http://mrpeak.cn/android/2016/01/11/android-performance-ui" target="_blank" rel="external">http://mrpeak.cn/android/2016/01/11/android-performance-ui</a>)</p>
<p>得下班了！就写到这里，全文结束！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近看到这篇文章&lt;a href=&quot;http://mrpeak.cn/android/2016/01/11/android-performan
    
    </summary>
    
      <category term="Android" scheme="http://oyjt.github.io/categories/Android/"/>
    
    
      <category term="随笔" scheme="http://oyjt.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="Android" scheme="http://oyjt.github.io/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://oyjt.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>为博客文章添加阅读量统计功能</title>
    <link href="http://oyjt.github.io/2016/04/09/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/"/>
    <id>http://oyjt.github.io/2016/04/09/为博客文章添加阅读量统计功能/</id>
    <published>2016-04-09T10:40:37.000Z</published>
    <updated>2016-10-07T12:11:05.154Z</updated>
    
    <content type="html"><![CDATA[<p>博客更换主题之后，查阅<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 主题使用文档</a>时，发现博客有文章阅读量统计功能，就想着也加上去。文档上虽然有相关介绍，但是发现新的主题已经集成了部分功能，内容有些出入。所以有了这边文章。</p>
<h3 id="修改-config-yml文件"><a href="#修改-config-yml文件" class="headerlink" title="修改_config.yml文件"></a>修改<code>_config.yml</code>文件</h3><p>打开NexT主题的根目录下的<code>_config.yml</code>文件，找到以下内容：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">leancloud_visitors:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span> <span class="comment">#&lt;AppID&gt;</span></div><div class="line"><span class="attr">  app_key:</span> <span class="comment">#&lt;AppKEY&gt;</span></div></pre></td></tr></table></figure></p>
<p>将<code>enable：false</code>改为<code>enable：true</code>。</p>
<h3 id="注册LeanCloud"><a href="#注册LeanCloud" class="headerlink" title="注册LeanCloud"></a>注册<a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud</a></h3><p>NexT的修改工作就完成之后，需要注册一个LeanCloud帐号才能继续使用这个功能。因为这个功能依赖于LeanCloud提供后端数据存取。<a href="https://leancloud.cn/login.html#/signin" target="_blank" rel="external"><strong>点我快速注册</strong></a>。</p>
<h3 id="配置LeanCloud"><a href="#配置LeanCloud" class="headerlink" title="配置LeanCloud"></a>配置<a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud</a></h3><p>注册完成LeanCloud帐号并验证邮箱之后，登录LeanCloud帐号。进行一番配置之后拿到AppID以及AppKey这两个参数，然后就可以正常使用文章阅读量统计的功能了。</p>
<h4 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h4><p>点击创建应用<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410180256.png" alt="创建应用"><br>输入应用名，可以随意输入（之后可以更改），然后点击创建即可。<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410181221.png" alt="输入应用名"></p>
<h4 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h4><p>应用创建成功之后进入数据管理<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410182354.png" alt="进入数据管理"><br>在应用的数据配置界面，左侧下划线开头的都是系统预定义好的表，为了便于区分我们新建一张表来保存我们的数据。点击左侧右上角的齿轮图标，新建Class<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410182630.png" alt="新建Class"><br>点击创建Class之后，为了保证我们前面对NexT主题的兼容，此处的新建Class名字必须为<code>Counter</code><br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410182833.png" alt="命名Class为Counter"><br>创建完成之后，左侧数据栏应该会多出一栏名为Counter的栏目，这个时候我们点击顶部的设置，切换到应用的操作界面<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410183142.png" alt="打开应用设置"></p>
<h4 id="获取AppID、AppKey"><a href="#获取AppID、AppKey" class="headerlink" title="获取AppID、AppKey"></a>获取AppID、AppKey</h4><p>在弹出的界面中，选择左侧的应用Key选项，即可发现我们创建应用的AppID以及AppKey<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410183807.png" alt="获取AppID、AppKey"><br>复制AppID以及AppKey并在NexT主题的_config.yml文件中我们相应的位置填入即可，正确配置之后文件内容像这个样子:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">leancloud_visitors:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  app_id:</span> 你的AppID</div><div class="line"><span class="attr">  app_key:</span> 你的AppKey</div></pre></td></tr></table></figure></p>
<h3 id="重新部署Hexo博客"><a href="#重新部署Hexo博客" class="headerlink" title="重新部署Hexo博客"></a>重新部署Hexo博客</h3><p>配置完成之后，重新生成部署Hexo博客，就可以正常使用文章阅读量统计的功能了。<br>需要特别说明的是：<br>记录文章访问量的唯一标识符是文章的发布日期以及文章的标题，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计。</p>
<h3 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h3><p>现在查看博客，会发现文章的统计量显示为0，而且这个时候我们LeanCloud对应的应用的Counter表中并没有相应的记录。当博客文章在配置好阅读量统计服务之后第一次打开时，便会自动向服务器发送数据来创建一条数据，该数据会被记录在对应的应用的Counter表中。<br><img src="http://7xstlp.com2.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160410185257.png" alt="后台数据管理"><br>我们可以修改其中的time字段的数值来达到修改某一篇文章的访问量的目的。双击具体的数值，修改之后回车即可保存。<br>注：</p>
<ul>
<li>url字段被当作唯一ID来使用，因此如果你不知道带来的后果的话请不要修改。</li>
<li>title字段显示的是博客文章的标题，用于后台管理的时候区分文章之用，没有什么实际作用。</li>
<li>其他字段皆为自动生成，具体作用请查阅LeanCloud官方文档，如果你不知道有什么作用请不要随意修改。</li>
</ul>
<p>至此，为博客文章添加阅读量统计功能就已经实现了。希望从此写博客能更有动力！</p>
<p>参考资料：<br><a href="https://notes.wanghao.work/2015-10-21-为NexT主题添加文章阅读量统计功能.html" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客更换主题之后，查阅&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT 主题使用文档&lt;/a&gt;时，发现博客有文章阅读量统计功能，就想着也加上去。文档上虽然有相关介绍，但是发
    
    </summary>
    
      <category term="随笔" scheme="http://oyjt.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://oyjt.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="hexo" scheme="http://oyjt.github.io/tags/hexo/"/>
    
      <category term="next" scheme="http://oyjt.github.io/tags/next/"/>
    
      <category term="主题" scheme="http://oyjt.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="统计" scheme="http://oyjt.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客更换主题</title>
    <link href="http://oyjt.github.io/2016/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    <id>http://oyjt.github.io/2016/01/16/hexo博客更换主题/</id>
    <published>2016-01-16T15:21:34.000Z</published>
    <updated>2016-10-07T12:11:05.154Z</updated>
    
    <content type="html"><![CDATA[<p>之前用hexo搭建完博客之后，发现官方默认的主题太丑，反正是不太符合我的审美了，好像我的审美也不咋滴o(╯□╰)o<br>既然主题不好看，那就得换一套，实在不行也可以自己改改样式。<br>改称自己喜欢的样子，这里不做过多讨论。<br>那么问题就简单了，选一套符合自己口味的主题，然后更换。</p>
<h3 id="第一步：选择主题"><a href="#第一步：选择主题" class="headerlink" title="第一步：选择主题"></a>第一步：选择主题</h3><p>主题从哪里找呢？官方就有提供了一些 <a href="https://hexo.io/themes/" target="_blank" rel="external">主题</a>，可以从中选择。<br>官方提供的主题不少，可是并不一定有自己喜欢的或者又很难选择，这是个头疼的问题。<br>之前我的博客主题就是随便选了一个还算看的过去的。<br>但是再使用的过程中发现了一些问题：</p>
<ul>
<li>不会自动生成目录</li>
<li>不能自动获取摘要</li>
<li>有很多配置不太方便</li>
</ul>
<p>虽然有些问题，但并不影响整体使用，所以也没想去换主题了。<br>前端时间逛知乎，发现这样一个问题：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">有哪些好看的 Hexo 主题？</a><br>查看第一名的答案，有个主题排行，发现排第一名的主题 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>。<br>然后点开主题看了一下，发现主题简约，配置详细，能够解决我之前存在的问题，于是就决定选择这个主题了。</p>
<h3 id="第二步：安装主题"><a href="#第二步：安装主题" class="headerlink" title="第二步：安装主题"></a>第二步：安装主题</h3><p>Hexo 有两份主要的配置文件（_config.yml），一份位于站点根目录下，另一份位于主题目录下。为了描述方便，在以下说明中，将前者称为 站点配置文件，后者称为 主题配置文件。</p>
<p>Hexo 安装主题的方式非常简单，只需要将主题文件放置于站点目录的 themes 目录下，然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p>
<h4 id="下载-NexT-主题"><a href="#下载-NexT-主题" class="headerlink" title="下载 NexT 主题"></a>下载 NexT 主题</h4><p>下载NexT主题稳定版：</p>
<ol>
<li>前往 <a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="external">NexT</a> 版本 发布页面</li>
<li>选择你所需要的版本，下载 Download 下的 Source Code (zip) 到本地。 例如，下载 v0.4.0 版本：<img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/download-stable-version.png" alt=""></li>
<li>解压所下载的压缩包至站点的 themes 目录下，并将 解压后的文件夹名称（<code>hexo-theme-next-0.4.0</code>）更改为 <code>next</code></li>
</ol>
<h4 id="启用NexT主题"><a href="#启用NexT主题" class="headerlink" title="启用NexT主题"></a>启用NexT主题</h4><p>克隆/下载 完成后，打开 站点配置文件，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。</p>
<h4 id="验证主题是否启用"><a href="#验证主题是否启用" class="headerlink" title="验证主题是否启用"></a>验证主题是否启用</h4><p>运行 <code>hexo s --debug</code>，并访问 <code>http://localhost:4000</code>，确保站点正确运行。</p>
<h3 id="第三步：配置"><a href="#第三步：配置" class="headerlink" title="第三步：配置"></a>第三步：配置</h3><h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><p>NexT 通过 Scheme 提供主题中的主题。 Mist 是 NexT 的第一款 Scheme。启用 Mist 仅需在 主题配置文件 中将 <code>#scheme: Mist</code> 前面的 <code>#</code> 注释去掉即可。</p>
<h4 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h4><p>编辑 站点配置文件，将 language 设置成你所需要的语言。<br>例如选用正体中文，则配置为：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">language:</span> <span class="built_in">zh</span>-Hans</div></pre></td></tr></table></figure></p>
<p>可用的语言如以下表格所示：</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>代码</th>
<th>设定值</th>
</tr>
</thead>
<tbody>
<tr>
<td>English</td>
<td><code>en</code></td>
<td><code>language: en</code></td>
</tr>
<tr>
<td>简体中文</td>
<td><code>zh-Hans</code></td>
<td><code>language: zh-Hans</code></td>
</tr>
<tr>
<td>French</td>
<td><code>fr-FR</code></td>
<td><code>language: fr-FR</code></td>
</tr>
<tr>
<td>正体中文</td>
<td><code>zh-hk/zh-tw</code></td>
<td><code>language: zh-hk</code></td>
</tr>
<tr>
<td>Russian</td>
<td><code>ru</code></td>
<td><code>language: ru</code></td>
</tr>
<tr>
<td>German</td>
<td><code>de</code></td>
<td><code>language: de</code></td>
</tr>
</tbody>
</table>
<h4 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h4><p>菜单配置在 主题配置文件的 <code>menu</code>。 若你的站点运行在子目录中，请将链接前缀的 <code>/</code> 去掉。默认支持的菜单项有：</p>
<table>
<thead>
<tr>
<th>键值</th>
<th>设定值</th>
<th>comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>home</td>
<td><code>home: /</code></td>
<td>主页</td>
</tr>
<tr>
<td>archives</td>
<td><code>archives: /archives</code></td>
<td>归档页</td>
</tr>
<tr>
<td>categories</td>
<td><code>categories: /categories</code></td>
<td>分类页（需手动创建）</td>
</tr>
<tr>
<td>tags</td>
<td><code>tags: /tags</code></td>
<td>标签页（需手动创建）</td>
</tr>
<tr>
<td>about</td>
<td><code>about: /about</code></td>
<td>关于页面 （需手动创建）</td>
</tr>
<tr>
<td>commonweal</td>
<td><code>commonweal: /404.html</code></td>
<td>公益 404 （需手动创建）</td>
</tr>
</tbody>
</table>
<p>菜单示例配置：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">menu</span>:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  <span class="selector-id">#about</span>: /about</div><div class="line">  <span class="selector-id">#categories</span>: /categories</div><div class="line">  tags: /tags</div><div class="line">  <span class="selector-id">#commonweal</span>: /<span class="number">404</span>.html</div></pre></td></tr></table></figure></p>
<h4 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h4><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示。可以通过修改 主题配置文件 中的 <code>sidebar</code> 字段来控制侧栏的行为。</p>
<p>支持的选项有：</p>
<ul>
<li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li>
<li><code>always</code> - 在所有页面中都显示</li>
<li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li>
</ul>
<p>侧栏示例配置：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sidebar:</span> post</div></pre></td></tr></table></figure></p>
<h4 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h4><p>编辑 站点配置文件，新增字段 <code>avatar</code>， 值设置成头像的链接地址。</p>
<p>其中，头像的链接地址可以是：</p>
<table>
<thead>
<tr>
<th>地址</th>
<th>值</th>
</tr>
</thead>
<tbody>
<tr>
<td>完整的互联网 URL</td>
<td><code>https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460</code></td>
</tr>
<tr>
<td>站点内的地址</td>
<td><code>/uploads/avatar.jpg</code> - 需要将你的头像图片放置在 站点的 <code>source/uploads/</code>（可能需要新建uploads目录）</td>
</tr>
<tr>
<td>&nbsp;</td>
<td><code>/images/avatar.jpg</code> - 需要将你的头像图片放置在 主题的 <code>source/images/</code> 目录下</td>
</tr>
</tbody>
</table>
<p>头像设置示例：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">avatar:</span> <span class="string">https:</span><span class="comment">//avatars1.githubusercontent.com/u/32269?v=3&amp;s=460</span></div></pre></td></tr></table></figure></p>
<h4 id="作者名称"><a href="#作者名称" class="headerlink" title="作者名称"></a>作者名称</h4><p>编辑 站点配置文件，设置 <code>author</code> 为你的昵称。</p>
<h4 id="站点描述设置"><a href="#站点描述设置" class="headerlink" title="站点描述设置"></a>站点描述设置</h4><p>编辑 站点配置文件，设置 <code>description</code> 字段为你的站点描述。站点描述可以是你喜欢的一句签名:)</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>到这里整个主题更换和配置就已经完成，现在可以看到博客已经成为预期的样子了。<br>如果更换其它的主题，也大同小异，都是这三步，只是涉及到具体的配置就有些区别而已。</p>
<p>更多的配置可以参考下面的链接：</p>
<ul>
<li><a href="http://theme-next.iissnan.com/five-minutes-setup.html" target="_blank" rel="external">NexT使用文档</a></li>
<li><a href="https://hexo.io/zh-cn/docs/configuration.html" title="hexo配置" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></li>
</ul>
<p>最后附上NexT下载地址：<br><a href="https://github.com/iissnan/hexo-theme-next" title="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前用hexo搭建完博客之后，发现官方默认的主题太丑，反正是不太符合我的审美了，好像我的审美也不咋滴o(╯□╰)o&lt;br&gt;既然主题不好看，那就得换一套，实在不行也可以自己改改样式。&lt;br&gt;改称自己喜欢的样子，这里不做过多讨论。&lt;br&gt;那么问题就简单了，选一套符合自己口味的主
    
    </summary>
    
      <category term="随笔" scheme="http://oyjt.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://oyjt.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="hexo" scheme="http://oyjt.github.io/tags/hexo/"/>
    
      <category term="next" scheme="http://oyjt.github.io/tags/next/"/>
    
      <category term="主题" scheme="http://oyjt.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="http://oyjt.github.io/2016/01/14/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://oyjt.github.io/2016/01/14/Markdown常用语法/</id>
    <published>2016-01-14T10:22:23.000Z</published>
    <updated>2016-10-07T12:11:05.153Z</updated>
    
    <content type="html"><![CDATA[<p>自从博客转移到github上之后，现在写博客都需要用到Markdown语法。<br>于是有了这边博文，方便以后查阅。</p>
<h3 id="了解-Markdown"><a href="#了解-Markdown" class="headerlink" title="了解 Markdown"></a>了解 Markdown</h3><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h3><p>使用 <em> 和 *</em> 表示斜体和粗体。</p>
<p>示例：</p>
<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<h3 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h3><p>在行首加井号表示不同级别的标题 (H1-H6)。<br>例如：</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># 一级标题</span></div><div class="line"><span class="meta">## 二级标题</span></div><div class="line"><span class="meta">### 三级标题</span></div><div class="line"><span class="meta">#### 四级标题</span></div><div class="line"><span class="meta">##### 五级标题</span></div><div class="line"><span class="meta">###### 六级标题</span></div></pre></td></tr></table></figure>
<h3 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p>
<p>示例：</p>
<p>这是去往 <a href="http://oyjt.github.io/">本人博客</a> 的链接。</p>
<h3 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h3><p>使用 *，- 表示无序列表。</p>
<p>示例：</p>
<ul>
<li>无序列表项 一</li>
<li>无序列表项 二</li>
<li>无序列表项 三</li>
</ul>
<h3 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p>
<p>示例：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<h3 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p>
<p>示例：</p>
<blockquote>
<p>野火烧不尽，春风吹又生。</p>
</blockquote>
<h3 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p>
<p>示例：</p>
<p>让我们聊聊 <code>html</code>。</p>
<h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.  代码块"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p>
<p>示例：</p>
<pre><code>这是一个代码块，此行左侧有四个不可见的空格。
</code></pre><h3 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9.  插入图像"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p>
<p>示例：</p>
<p><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"></p>
<h3 id="10-删除线"><a href="#10-删除线" class="headerlink" title="10. 删除线"></a>10. 删除线</h3><p>使用 ~~ 表示删除线。</p>
<p><del>这是一段错误的文本。</del></p>
<h3 id="11-加强的代码块"><a href="#11-加强的代码块" class="headerlink" title="11. 加强的代码块"></a>11. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示。</p>
<p>非代码示例：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-<span class="built_in">get</span> install <span class="keyword">vim</span>-gnome</div></pre></td></tr></table></figure>
<p>Python 示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@requires_authorization</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="string">'''A docstring'''</span></div><div class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></div><div class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></div><div class="line"><span class="meta">... </span>prompt'''</div></pre></td></tr></table></figure>
<p>JavaScript 示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* nth element in the fibonacci series.</div><div class="line">* @param n &gt;= 0</div><div class="line">* @return the nth element, &gt;= 0.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</div><div class="line">  <span class="keyword">var</span> tmp;</div><div class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</div><div class="line">    tmp = a;</div><div class="line">    a += b;</div><div class="line">    b = tmp;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</div></pre></td></tr></table></figure>
<h3 id="12-表格支持"><a href="#12-表格支持" class="headerlink" title="12. 表格支持"></a>12. 表格支持</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="13-待办事宜-Todo-列表"><a href="#13-待办事宜-Todo-列表" class="headerlink" title="13. 待办事宜 Todo 列表"></a>13. 待办事宜 Todo 列表</h3><p>注：本博客不支持<br>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p>
<pre><code>- [ ] **七月旅行准备**
    - [ ] 准备邮轮上需要携带的物品
    - [ ] 浏览日本免税店的物品
    - [x] 购买蓝宝石公主号七月一日的船票
</code></pre><p>对应显示如下待办事宜 Todo 列表：</p>
<ul>
<li><p>[ ] <strong>七月旅行准备</strong></p>
<ul>
<li>[ ] 准备邮轮上需要携带的物品</li>
<li><p>[ ] 浏览日本免税店的物品</p>
</li>
<li><p>[x] 购买蓝宝石公主号七月一日的船票</p>
</li>
</ul>
</li>
</ul>
<p>参考资料：<br><a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="external">Markdown 简明语法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从博客转移到github上之后，现在写博客都需要用到Markdown语法。&lt;br&gt;于是有了这边博文，方便以后查阅。&lt;/p&gt;
&lt;h3 id=&quot;了解-Markdown&quot;&gt;&lt;a href=&quot;#了解-Markdown&quot; class=&quot;headerlink&quot; title=&quot;了解 M
    
    </summary>
    
      <category term="随笔" scheme="http://oyjt.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://oyjt.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="markdown" scheme="http://oyjt.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo创建github博客</title>
    <link href="http://oyjt.github.io/2016/01/14/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/"/>
    <id>http://oyjt.github.io/2016/01/14/使用hexo创建github博客/</id>
    <published>2016-01-14T06:45:23.000Z</published>
    <updated>2016-10-07T12:11:05.155Z</updated>
    
    <content type="html"><![CDATA[<p>前面说过，之前用wordpress辛辛苦苦搭建的博客，因为服务器和域名的问题挂掉了。后来发现github也能够搭建自己的博客，不需要去关心主机域名的问题，而且还能使用Markdown来写博客，就研究了一番。</p>
<h2 id="创建博客页面仓库"><a href="#创建博客页面仓库" class="headerlink" title="创建博客页面仓库"></a>创建博客页面仓库</h2><p>创建地址：<a href="https://github.com/new" target="_blank" rel="external">https://github.com/new</a><br>创建仓库的前提是必须先有github账号，至于怎么注册账号，就不具体展开说明了。<br>创建的仓库名字需要和你的账号对应，如<strong>oyjt.github.io</strong><br>输入基本信息，然后点击创建仓库<br><img src="http://img.blog.csdn.net/20160112105445436" alt="这里写图片描述"></p>
<h2 id="进入项目设置页面"><a href="#进入项目设置页面" class="headerlink" title="进入项目设置页面"></a>进入项目设置页面</h2><p>现在仓库就已经建好了，接下来进入设置界面。<br>因为这个项目就是专门的放页面的,所以master分支即可。<br><img src="http://img.blog.csdn.net/20160112110305481" alt="这里写图片描述"></p>
<h2 id="进入页面自动生成器"><a href="#进入页面自动生成器" class="headerlink" title="进入页面自动生成器"></a>进入页面自动生成器</h2><p>在设置界面，点击运行自动页面生成器，其他默认即可。<br><img src="http://img.blog.csdn.net/20160112110943565" alt="这里写图片描述"></p>
<h2 id="写第一篇博客"><a href="#写第一篇博客" class="headerlink" title="写第一篇博客"></a>写第一篇博客</h2><p>点击之后，会跳到下面的页面，现在我们来写第一篇博客<br><img src="http://img.blog.csdn.net/20160112112128253" alt="这里写图片描述"><br>写完之后点击继续，选择一个主题<br><img src="http://img.blog.csdn.net/20160112112638134" alt="这里写图片描述"></p>
<h2 id="选择主题并发布"><a href="#选择主题并发布" class="headerlink" title="选择主题并发布"></a>选择主题并发布</h2><p>这里提供了一些主题，可以一个个点击查看效果，找的喜欢的主题之后，就可以发布了。<br>选择主题之后，会生成一些css，html，img到你的仓库。<br>如果没有找到自己喜欢的主题，可以用其他的主题，当然也可以自己修改主题。<br><img src="http://img.blog.csdn.net/20160112113225657" alt="这里写图片描述"></p>
<h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>现在，你就可以访问自己的github主页了。<br>比如我的博客访问地址：<a href="http://oyjt.github.io/">http://oyjt.github.io/</a><br>访问效果图：<br><img src="http://img.blog.csdn.net/20160112114831700" alt="这里写图片描述"></p>
<hr>
<p>到这里你会奇怪，说了这么多和hexo有什么关系，完全都没用到hexo，内容和标题完全不搭嘛。<br>是的！没错，为了便于管理博客，接下来就是hexo部分，请继续往下看吧！</p>
<h2 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h2><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p>
<ul>
<li><a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a></li>
<li><a href="https://desktop.github.com/" target="_blank" rel="external">Git Windows</a></li>
</ul>
<p>上面是以Windows系统作为例子，其他系统以及具体的安装方法，就不展开说明了。<br>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> install hexo-cli -g</div><div class="line"></div><div class="line"><span class="comment">#如果命令无法运行，可以尝试更换taobao的npm源</span></div><div class="line"><span class="built_in">npm</span> install -g cnpm --registry=https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org</div></pre></td></tr></table></figure>
<h2 id="创建Hexo文件夹"><a href="#创建Hexo文件夹" class="headerlink" title="创建Hexo文件夹"></a>创建Hexo文件夹</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo init &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>cd &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>npm install</div></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line"><span class="string">|   ├── _drafts</span></div><div class="line"><span class="string">|   └── _posts</span></div><div class="line">└── themes</div></pre></td></tr></table></figure>
<h2 id="Hexo-文件简介"><a href="#Hexo-文件简介" class="headerlink" title="Hexo 文件简介"></a>Hexo 文件简介</h2><p><strong>_config.yml</strong><br>网站的 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">配置</a> 信息，您可以在此配置大部分的参数。</p>
<p><strong>package.json</strong><br>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">package</span>.<span class="title">json</span></span></div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"hexo-site"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"0.0.0"</span>,</div><div class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"hexo"</span>: &#123;</div><div class="line">    <span class="string">"version"</span>: <span class="string">""</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"dependencies"</span>: &#123;</div><div class="line">    <span class="string">"hexo"</span>: <span class="string">"^3.0.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-archive"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-category"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-index"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-tag"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="string">"hexo-renderer-ejs"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="string">"hexo-renderer-stylus"</span>: <span class="string">"^0.2.0"</span>,</div><div class="line">    <span class="string">"hexo-renderer-marked"</span>: <span class="string">"^0.2.4"</span>,</div><div class="line">    <span class="string">"hexo-server"</span>: <span class="string">"^0.1.2"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>scaffolds</strong><br><a href="https://hexo.io/zh-cn/docs/templates.html" target="_blank" rel="external">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p><strong>source</strong><br>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<p><strong>themes</strong><br><a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="external">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>
<h2 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h2><p>继续执行以下命令，成功后可登录localhost:4000查看效果</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">server</span></div></pre></td></tr></table></figure>
<h2 id="Hexo常用简写命令"><a href="#Hexo常用简写命令" class="headerlink" title="Hexo常用简写命令"></a>Hexo常用简写命令</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> n <span class="comment">#生成文章，或者source\_posts手动编辑</span></div><div class="line">hexo s <span class="comment">#本地发布预览效果</span></div><div class="line">hexo g <span class="comment">#生成public静态文件</span></div><div class="line">hexo d <span class="comment">#部署之前预先生成静态文件</span></div></pre></td></tr></table></figure>
<h2 id="部署静态网页到GitHub"><a href="#部署静态网页到GitHub" class="headerlink" title="部署静态网页到GitHub"></a>部署静态网页到GitHub</h2><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo deploy</div></pre></td></tr></table></figure>
<p>在开始之前，您必须先在 <code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 type 参数，例如：</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">deploy:</span></div><div class="line"><span class="symbol">  type:</span> git</div></pre></td></tr></table></figure>
<p>发布到git上需要安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a> 插件。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></div></pre></td></tr></table></figure>
<p>修改配置。</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">deploy:</span></div><div class="line"><span class="symbol">  type:</span> git</div><div class="line"><span class="symbol">  repo:</span> <span class="params">&lt;repository url&gt;</span></div><div class="line"><span class="symbol">  branch:</span> [branch]</div><div class="line"><span class="symbol">  message:</span> [message]</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>repo</code></td>
<td>库（Repository）地址</td>
</tr>
<tr>
<td><code>branch</code></td>
<td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</td>
</tr>
<tr>
<td><code>message</code></td>
<td>自定义提交信息 (默认为 <code>Site updated: &amp;lbrace;&amp;lbrace; now(&quot;YYYY-MM-DD HH:mm:ss&quot;) &amp;rbrace;&amp;rbrace;</code>)</td>
</tr>
</tbody>
</table>
<p>配置完之后，运行命令 <code>hexo d</code> ，就能够将public里的文件发布到github。<br>现在就可以去查看网站的效果啦！<br> <a href="http://oyjt.github.io/">http://oyjt.github.io/</a></p>
<p>参考资料：</p>
<ol>
<li><a href="http://blog.csdn.net/renfufei/article/details/37725057" target="_blank" rel="external">创建GitHub技术博客全攻略</a></li>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a></li>
<li><a href="http://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="external">使用GitHub和Hexo搭建免费静态Blog</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面说过，之前用wordpress辛辛苦苦搭建的博客，因为服务器和域名的问题挂掉了。后来发现github也能够搭建自己的博客，不需要去关心主机域名的问题，而且还能使用Markdown来写博客，就研究了一番。&lt;/p&gt;
&lt;h2 id=&quot;创建博客页面仓库&quot;&gt;&lt;a href=&quot;#创
    
    </summary>
    
      <category term="随笔" scheme="http://oyjt.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://oyjt.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="hexo" scheme="http://oyjt.github.io/tags/hexo/"/>
    
      <category term="github" scheme="http://oyjt.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World!</title>
    <link href="http://oyjt.github.io/2015/07/09/first-blog/"/>
    <id>http://oyjt.github.io/2015/07/09/first-blog/</id>
    <published>2015-07-08T18:24:03.000Z</published>
    <updated>2016-10-07T12:11:05.154Z</updated>
    
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;“Hello World!”理所应当的成为了第一遍博文！<br>&#160; &#160; &#160; &#160;说是第一篇博文，其实也不算，准确的说法应该是：在github上的第一篇博文。<br>&#160; &#160; &#160; &#160;为什么这么说呢？因为前段时间主机和域名先后到期，然后导致博客挂掉了。</p>
<h3 id="服务器到期"><a href="#服务器到期" class="headerlink" title="服务器到期"></a>服务器到期</h3><p>&#160; &#160; &#160; &#160;因为记错时间，本以为到期时间是今年九月份，结果三四月份就到期了。当初是和同事合买的主机，通知邮件是发给同事的，后来邮件没收到就被关站了。关键没有本地备份，数据彻底丢失。<br>&#160; &#160; &#160; &#160;那时候完全心灰意冷了！每每想起辛辛苦苦建立的博客就这样没了，再加上工作比较忙，一点写博客的动力都没有，然后博客就搁置下来。</p>
<h3 id="域名到期"><a href="#域名到期" class="headerlink" title="域名到期"></a>域名到期</h3><p>&#160; &#160; &#160; &#160;域名应为当初亲力亲为，一手操办的，到期时间倒是记得很清楚。本想吸取主机的教训，早早的去续费，结果新网升级，需要激活邮箱登录。用之前注册的邮箱激活，发现邮箱不能用，当初可是确定用这个邮箱注册的。没办法，只能联系客服，说要去填写申请材料改邮箱。然后按照以下步骤：</p>
<ol>
<li>下载申请材料电子档</li>
<li>打印电子档材料，然后填写，需要填写<strong>注册会员ID</strong>（没记住，就没填）</li>
<li>扫描填写后的电子档材料</li>
<li>扫描身份证</li>
<li>将扫描后的材料发送到指定邮箱审核</li>
</ol>
<p>&#160; &#160; &#160; &#160;因为没记住<strong>会员ID</strong>，在邮件里注明了<strong>会员昵称</strong>，然后在    其他信息完整的情况下，完成了以上步骤。<br>&#160; &#160; &#160; &#160;一天之后，邮件收到，说没有会员ID，申请失败。然后联系新网客服，客服说帮忙查一下。提供信息之后，查询的时候客服说内部系统出问题了，明天会联系我并告知<strong>会员ID</strong>。<br>&#160; &#160; &#160; &#160;然后就等着客服联系，手机二十四小时开机等了一天，结果没有结果了。<br>&#160; &#160; &#160; &#160;因为这两件事，决定用Github写博客了。加上对新网失望了，以后也不想和新网有接触，就没去管域名了。后面就过期了！</p>
<p>###Github开博###<br>&#160; &#160; &#160; &#160;决定用Github后，就开始找相关搭建博客的教程。陆陆续续用了几套方案，最终选择了hexo这种简单快速的搭建方式。博客主题页先后换了几个，然后找到了现在的主题，并做了一些简单的修改。</p>
<p>###写作目的###<br>写博客的主要目的是以下几点：</p>
<ol>
<li>梳理所学的知识点</li>
<li>对技术资料点进行存档，方便以后查阅</li>
<li>提升写作能力</li>
<li>鞭策自己去不断学习</li>
</ol>
<p>###关于博客###<br>本博客主要用来分享一些Android和前端的技术知识，其次用来记录个人生活。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;“Hello World!”理所应当的成为了第一遍博文！&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;说是第一篇博文，其实也不算，准确的说法应该是：在github上的第一篇博文。&lt;br&gt;&amp;#160; &amp;#
    
    </summary>
    
      <category term="生活" scheme="http://oyjt.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="博文" scheme="http://oyjt.github.io/tags/%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
</feed>
